##
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU Lesser General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU Lesser General Public License for more details.
##
## You should have received a copy of the GNU Lesser General Public License
## along with this program.  If not, see http://www.gnu.org/licenses/.
##

[General]
user-interface = Qtenv
description = "multiple UAVs hovering over Boston"
network = OsgEarthNet

#scheduler-class = "omnetpp::cRealTimeScheduler"
#realtimescheduler-scaling = 10

*.osgEarthScene.scene = "boston.earth"
*.playgroundLatitude = 42.3558
*.playgroundLongitude = -71.0677
*.playgroundWidth = 400m
*.playgroundHeight = 200m
*.channelController.connectionColor = "#0000FF40"
*.channelController.showConnections = true
#*.numUAVs = 5
*.uav[*].modelURL = "quadrocopter.small.obj.15.scale.0,0,0.rot"
*.uav[*].labelColor = "#FF7C00CC"
*.uav[*].label2Color = "#FF7C00EE"
#*.uav[*].startTime = 0s
*.uav[*].batteryCapacity = 0mAh
*.uav[*].batteryRemaining = uav[index].batteryCapacity / 2 + replaceUnit(intuniform(0, dropUnit(uav[index].batteryCapacity / 2)), "mAh")

*.cs[*].modelURL = "chargingstation_v1.osgt.1.scale.0,0,0.rot.0,0,-15e-1.trans"

# time-based updates for animation
# set to "0ms" for event-based updates only
*.*.timeStep = 9000ms

[Config multiUAV-Movement]
*.numUAVs = 3
#*.uav[*].modelURL = "glider.osgb.7.scale.0,0,180.rot"
#*.uav[*].modelURL = "quadcopter_v3.osg.12e-1.scale.0,0,90.rot"
*.uav[*].startX = 10m + index * 10m
*.uav[*].startY = 20m
*.uav[0..1].trackFile = "BostonParkCircle.waypoints"
*.uav[2..3].trackFile = "BostonParkLine.waypoints"
*.uav[4..].trackFile = "BostonParkZigZag.waypoints"
*.uav[*].startTime = (index * 2s)
*.uav[*].batteryCapacity = 5200mAh
*.numCSs = 2
*.cs[0].posX = 50m
*.cs[0].posY = 150m
*.cs[1].posX = 350m
*.cs[1].posY = 50m
*.cs[2..].posX = uniform(10m, 390m)
*.cs[2..].posY = uniform(10m, 190m)
# spotsWaiting: 0 is used for unlimited spots
*.cs[*].spotsWaiting = 0
*.cs[*].spotsCharging = 2
# batteryCapacity: 0 is used for unlimited battery
*.cs[*].batteryCapacity = 0mAh
*.cs[*].chargeEffectivenessPercentage = 80
*.cs[*].chargeCurrent = 3.5A
*.cs[*].linearGradient = 0.2754
*.cs[*].prioritizeFastCharge = false

[Config multiUAV-Movement-Offline]
extends = multiUAV-Movement
description = "multiple UAVs hovering over Boston, with locally stored tiles"
*.osgEarthScene.scene = "boston_offline.earth"
#*.missionControl.missionFiles = "BostonParkCircle.waypoints,BostonParkLine.waypoints"

[Config Szenario_Hotel_Gabelbach]
description = "Ein Waldbrand bedroht nicht nur das Hotel Gabelbach, sondern hat sich auf der gesamten Waldfl채che im den Dreieck Hotel Gabelbach, Ilmenau und Manebach."
*.channelController.showConnections = false
*.osgEarthScene.scene = "Szenario_Hotel_Gabelbach.earth"

#TODO: adjust
*.playgroundLatitude = 50.6830269
*.playgroundLongitude = 10.8538055
*.playgroundWidth = 2500m
*.playgroundHeight = 2500m

#TODO: mit Thomas absprechen, realistische Werte recherchieren
*.cs[*].spotsCharging = 20
*.cs[*].chargeEffectivenessPercentage = 80
*.cs[*].chargeCurrent = 3.5A
*.cs[*].linearGradient = 0.2754
*.cs[*].prioritizeFastCharge = true

#TODO: an die Startpunkte anpassen
*.numCSs = 6
*.numUAVs = 30
# Ilmenau Sportplatz
*.cs[0].posX = 3171m
*.cs[0].posY = 311m
*.uav[0..4].startX = 3171m
*.uav[0..4].startY = 311m
# Kickelhahn
*.cs[1].posX = 3127m
*.cs[1].posY = 1803m
*.uav[5..9].startX = 3127m
*.uav[5..9].startY = 1803m
# Hotel
*.cs[2].posX = 2185m
*.cs[2].posY = 2869m
*.uav[10..14].startX = 2185m
*.uav[10..14].startY = 2869m
# Manebach S체d
*.cs[3].posX = 1102m
*.cs[3].posY = 2511m
*.uav[15..19].startX = 1102m
*.uav[15..19].startY = 2511m
# Manebach Mitte
*.cs[4].posX = 510m
*.cs[4].posY = 1389m
*.uav[20..24].startX = 510m
*.uav[20..24].startY = 1389m
# Zentral (Mesh)
*.cs[5].posX = 1250m
*.cs[5].posY = 1250m
*.uav[25..29].startX = 1250m
*.uav[25..29].startY = 1250m

*.uav[*].trackFile = "noOne.cares"
*.uav[*].batteryCapacity = 5200mAh
*.uav[*].batteryRemaining = 4680mAh
*.uav[*].choseClosestCNForExchange = true

*.*.timeStep = 4000ms
*.*.commandCount = 20

*.missionControl.missionFiles = "missions\\Szenario_WB_Hotel_Gabelbach_Mission_Hotel.waypoints,missions\\Szenario_WB_Hotel_Gabelbach_Mission_Ilmenau_Sportplatz.waypoints,missions\\Szenario_WB_Hotel_Gabelbach_Mission_Kickelhahn.waypoints,missions\\Szenario_WB_Hotel_Gabelbach_Mission_Manebach_Mitte.waypoints,missions\\Szenario_WB_Hotel_Gabelbach_Mission_Manebach_Sued.waypoints"

[Config missions]
description = "mission management and research"
*.channelController.showConnections = false
*.osgEarthScene.scene = "missions.earth"
*.playgroundLatitude = 50.687748
*.playgroundLongitude = 10.934594
*.playgroundWidth = 400m
*.playgroundHeight = 400m

*.cs[*].spotsWaiting = 0
*.cs[*].spotsCharging = 20
*.cs[*].chargeEffectivenessPercentage = 80
*.cs[*].chargeCurrent = 3.5A
*.cs[*].linearGradient = 0.2754
*.cs[*].prioritizeFastCharge = false

*.numUAVs = 20
*.uav[*].startX = 0m
*.uav[*].startY = 0m
*.uav[*].trackFile = "noOne.cares"
*.uav[*].batteryCapacity = 5200mAh
*.uav[*].batteryRemaining = 4680mAh
*.uav[*].choseClosestCNForExchange = true

*.*.timeStep = 4000ms

[Config missions-oneCN]
extends = missions
*.numCSs = 1
#*.cs[0].posX = 0m
#*.cs[0].posY = 0m

[Config missions-twoCN]
extends = missions
*.numCSs = 2
#*.cs[0].posX = 0m
#*.cs[0].posY = 0m
*.cs[1].posX = 400m
*.cs[1].posY = 400m

[Config mission-Nr-01]
description = "Alle WP haben optimalen Abstand."
extends = missions-oneCN
*.missionControl.missionFiles = "missions/mission1.waypoints"
*.*.commandCount = 2

[Config mission-Nr-02]
description = "Es gibt WP, die optimalen Abstand haben (,aber nicht alle)."
extends = missions-oneCN
*.missionControl.missionFiles = "missions/mission2.waypoints"
*.*.commandCount = 4

[Config mission-Nr-03]
description = "Nur ein WP hat optimalen Abstand."
extends = missions-oneCN
*.missionControl.missionFiles = "missions/mission3.waypoints"
*.*.commandCount = 2

[Config mission-Nr-04]
description = "Nur ein WP hat optimalen Abstand, lange Flugzeit."
extends = missions-oneCN
*.missionControl.missionFiles = "missions/mission4.waypoints"
*.*.commandCount = 2

[Config mission-Nr-05]
description = "Es gibt eine lokal optimale CN f체r je einen WP."
extends = missions-twoCN
*.missionControl.missionFiles = "missions/mission3.waypoints"
*.*.commandCount = 2

[Config mission-Nr-06]
description = "Es gibt mehrere CN, aber nur eine ist optimal."
extends = missions-twoCN
*.missionControl.missionFiles = "missions/mission6.waypoints"
*.*.commandCount = 2

# cs[1] is supoptimal compared to cs[0], but better for wp[1] compared to wp[0]
*.cs[1].posX = 300m
*.cs[1].posY = 300m

[Config mission-Nr-07]
description = "Es gibt lokal optimale CN f체r mehrere WP."
extends = missions-twoCN
*.missionControl.missionFiles = "missions/mission7.waypoints"
*.*.commandCount = 5

[Config Communication]
#TODO Silvi fill as you wish
*.numUAVs = 5
*.uav[*].trackFile = "FlightCommandsBuildings.track"
*.uav[*].modelURL = "glider.osgb.7.scale.0,0,180.rot"
*.uav[*].trailColor = "#000000FF"
*.uav[*].trailLength = 1000
*.uav[*].showTxRange = false
*.uav[*].rangeColor = "#40000040"
*.uav[*].txRange = 200m
*.uav[*].transmissionAnimUrl = "bubble.osgb.7.scale"
*.uav[*].transmissionDuration = 1s
*.uav[*].transmissionColor = "red"
*.uav[*].batteryCapacity = 0mAh
